/**
 * [BoxLang]
 *
 * Copyright [2023] [Ortus Solutions, Corp]
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package ortus.boxlang.compiler.ast;

import java.io.Serializable;

/**
 * Error generated by the parser, consist of an error message and the position with in the
 * source code of the offending symbol.
 */
public class Issue implements Serializable {

	private static final long	serialVersionUID	= 1L;

	private final String		message;
	private final Position		position;

	/**
	 * Creates a parsing error message
	 *
	 * @param message  error message
	 * @param position position within the source code
	 */
	public Issue( String message, Position position ) {
		this.message	= message;
		this.position	= position;
	}

	public String getMessage() {
		return message;
	}

	public Position getPosition() {
		return position;
	}

	/**
	 * Returns the string representation of an error message.
	 * Ii includes the position and the error message
	 * If the error has been generated parsing a file, the message includes the full
	 * path of the file.
	 *
	 * @return the (file path) position and error message
	 *
	 * @see Position
	 */
	@Override
	public String toString() {
		StringBuilder sb = new StringBuilder();
		if ( this.position != null ) {
			if ( this.position.getSource() != null ) {
				sb.append( position.getSource() );
				sb.append( ":" );
			}
			sb.append( " Line: " );
			sb.append( position.getStart().getLine() );
			sb.append( " Col: " );
			sb.append( position.getStart().getColumn() );
			sb.append( " - " );
		}
		sb.append( this.message );

		return sb.toString();
	}
}
