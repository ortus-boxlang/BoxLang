<!--- table of class data --->
<bx:output>
	<div class="bx-dump">
		<table class="bx-table-tertiary" title="#encodeForHTML( posInCode )#">
			<caption
				role="button"
				tabindex="0"
				<bx:if expand>open</bx:if>
				onclick="this.toggleAttribute('open');this.nextElementSibling.classList.toggle('d-none')"
				onkeyup="if(event.key === 'Enter'){ this.toggleAttribute('open');this.nextElementSibling.classList.toggle('d-none');}"
			>
				<strong>
					<bx:if label.len() >#label# - </bx:if>
					#encodeForHTML( var.getClass().getSimpleName() )#
				</strong>
			</caption>
			<tbody
				<bx:if !expand>class="d-none"</bx:if>
			>
				<!--- CLASS toString --->
				<tr>
					<th scope="row">
						toString()
					</th>
					<td>#encodeForHTML( var.toString() )#</td>
				</tr>

				<!--- CLASS NAME --->
				<tr>
					<th scope="row">
						Class
					</th>
					<td>#encodeForHTML( var.getClass().getName() )#</td>
				</tr>

				<!--- CLASS FIELDS --->
				<tr>
					<th scope="row">Fied(s)</th>
					<td>
						<bx:set fields = var.getClass().getFields()>
							<table class="bx-table-default">
								<thead>
									<tr>
										<th>Name</th>
										<th>Signature</th>
										<th>Value</th>
									</tr>
								</thead>
								<tbody>
									<bx:script>
										for( field in fields ) {
											```
												<tr>
													<td>
														<strong>#encodeForHTML( field.getName() )#</strong>
													</td>
													<td>
														<pre><code>#encodeForHTML( field.toString() )#</code></pre>
													</td>
													<td>
														<bx:try>
															#encodeForHTML( field.get( var ) )#
															<bx:catch>
																<em>--- Not Available ---</em>
															</bx:catch>
														</bx:try>
													</td>
												</tr>
											```
										}
									</bx:script>
								</tbody>
							</table>
					</td>
				</tr>

				<!--- CLASS annotations --->
				<tr>
					<th scope="row">Annotations(s)</th>
					<td>
						<bx:set annotations = var.getClass().getDeclaredannotations()>
						<table class="bx-table-default">
							<thead>
								<tr>
									<th><b>Type</b></th>
									<th><b>Signature</b></th>
								</tr>
							</thead>
							<tbody>
								<bx:script>
									for( annotation in annotations ) {
										```
											<tr>
												<td>#annotation.annotationType().toString()#</td>
												<td>
													<pre><code>#encodeForHTML( annotation.toString() )#</code></pre>
												</td>
											</tr>
										```
										}
								</bx:script>
							</tbody>
						</table>
					</td>
				</tr>

				<!--- CLASS Constructors --->
				<tr>
					<th scope="row">Constructor(s)</th>
					<td>
						<bx:set constructors = var.getClass().getDeclaredConstructors()>
						<table class="bx-table-default">
							<thead>
								<tr>
									<th><b>Signature</b></th>
								</tr>
							</thead>
							<tbody>
								<bx:script>
									for( constructor in constructors ) {
										```
											<tr>
												<td>
													<pre><code>#encodeForHTML( constructor.toString() )#</code></pre>
												</td>
											</tr>
										```
										}
								</bx:script>
							</tbody>
						</table>
					</td>
				</tr>

				<!--- CLASS Methods --->
				<tr>
					<th scope="row">Method(s)</th>
					<td>
						<bx:script>
							import java.util.Arrays;
							import java.util.Comparator;
							methods = Arrays.stream( var.getClass().getDeclaredMethods() )
								.sorted( Comparator.comparing( m -> m.getName() ) )
								.toList();
						</bx:script>
						<table class="bx-table-default">
							<thead>
								<tr><th>Name</th><th>Signature</th></tr>
							</thead>
							<tbody>
								<bx:script>
									for( method in methods ) {
										```
											<tr>
												<td>
													<strong>#encodeForHTML( method.getName() )#</strong>
												</td>
												<td>
													<pre><code>#encodeForHTML( method.toString() )#</code></pre>
												</td>
											</tr>
										```
									}
								</bx:script>
							</tbody>
						</table>
					</td>
				</tr>
			</tbody>
		</table>
	</div>
</bx:output>
