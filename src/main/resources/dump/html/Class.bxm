<bx:script>
	expandRoot = expand ?: true;
</bx:script>
<bx:output>
	<div class="bx-dump">
		<table class="bx-table-tertiary" title="#encodeForHTML( posInCode )#">
			<caption
				role="button"
				tabindex="0"
				<bx:if expandRoot>open aria-expanded="true"<bx:else>aria-expanded="false"</bx:if>
				data-bx-toggle="siblings"
			>
				<strong>
					<bx:if label.len() >#label# - </bx:if>
					#encodeForHTML( var.getClass().getSimpleName() )#
				</strong>
			</caption>
			<tbody
				<bx:if !expandRoot>class="d-none"</bx:if>
			>
				<!--- CLASS toString --->
				<tr>
					<th
						aria-expanded="true"
						data-bx-toggle="onoff"
						scope="row"
						valign="top"
						tabindex="0"
					>
						toString()
					</th>
					<td>
						<div class="bx-onoff">
							#encodeForHTML( var.toString() )#
						</div>
					</td>
				</tr>

				<!--- CLASS NAME --->
				<tr>
					<th
						aria-expanded="true"
						data-bx-toggle="onoff"
						scope="row"
						valign="top"
						tabindex="0"
					>
						Class
					</th>
					<td>
						<div class="bx-onoff">
							<em>#encodeForHTML( var.getClass().getName() )#</em>
						</div>
					</td>
				</tr>

				<!--- CLASS FIELDS --->
				<bx:if var.getClass().getFields().len()>
					<tr>
						<th
							aria-expanded="true"
							data-bx-toggle="onoff"
							scope="row"
							valign="top"
							tabindex="0"
						>
							Field(s)
						</th>
						<td>
							<div class="bx-onoff">
								<bx:set fields = var.getClass().getFields()>
								<table class="bx-table-default">
									<thead>
										<tr>
											<th>Name</th>
											<th>Signature</th>
											<th>Value</th>
										</tr>
									</thead>
									<tbody>
										<bx:script>
											for( variables.field in fields ) {
												```
													<tr>
														<td>
															<strong>#encodeForHTML( variables.field.getName() )#</strong>
														</td>
														<td>
															<pre><code>#encodeForHTML( variables.field.toString() )#</code></pre>
														</td>
														<td>
															<bx:try>
																#encodeForHTML( variables.field.get( var ) )#
																<bx:catch>
																	<em>--- Not Available ---</em>
																</bx:catch>
															</bx:try>
														</td>
													</tr>
												```
											}
										</bx:script>
									</tbody>
								</table>
							</div>
						</td>
					</tr>
				</bx:if>

				<!--- CLASS annotations --->
				<bx:if var.getClass().getDeclaredannotations().len()>
					<tr>
						<th
							aria-expanded="true"
							data-bx-toggle="onoff"
							scope="row"
							valign="top"
							tabindex="0"
						>
							Annotations(s)
						</th>
						<td>
							<div class="bx-onoff">
								<bx:set annotations = var.getClass().getDeclaredannotations()>
								<table class="bx-table-default">
									<thead>
										<tr>
											<th><b>Type</b></th>
											<th><b>Signature</b></th>
										</tr>
									</thead>
									<tbody>
										<bx:script>
											for( variables.annotation in annotations ) {
												```
													<tr>
														<td>#variables.annotation.annotationType().toString()#</td>
														<td>
															<pre><code>#encodeForHTML( variables.annotation.toString() )#</code></pre>
														</td>
													</tr>
												```
												}
										</bx:script>
									</tbody>
								</table>
							</div>
						</td>
					</tr>
				</bx:if>

				<!--- CLASS Constructors --->
				<bx:if var.getClass().getDeclaredConstructors().len()>
					<tr>
						<th
							aria-expanded="true"
							data-bx-toggle="onoff"
							scope="row"
							valign="top"
							tabindex="0"
						>
							Constructor(s)
						</th>
						<td>
							<div class="bx-onoff">
								<bx:set constructors = var.getClass().getDeclaredConstructors()>
								<table class="bx-table-default">
									<thead>
										<tr>
											<th><b>Signature</b></th>
										</tr>
									</thead>
									<tbody>
										<bx:script>
											for( variables.constructor in constructors ) {
												```
													<tr>
														<td>
															<pre><code>#encodeForHTML( variables.constructor.toString() )#</code></pre>
														</td>
													</tr>
												```
												}
										</bx:script>
									</tbody>
								</table>
							</div>
						</td>
					</tr>
				</bx:if>

				<!--- CLASS Methods --->
				<tr>
					<th
						aria-expanded="true"
						data-bx-toggle="onoff"
						scope="row"
						valign="top"
						tabindex="0"
					>
						Method(s)
					</th>
					<td>
						<div class="bx-onoff">
							<bx:script>
								import java.util.Arrays;
								import java.util.Comparator;
								variables.methods = Arrays.stream( var.getClass().getDeclaredMethods() )
									.sorted( Comparator.comparing( m -> arguments.m.getName() ) )
									.toList();
							</bx:script>
							<table class="bx-table-default">
								<thead>
									<tr><th>Name</th><th>Signature</th></tr>
								</thead>
								<tbody>
									<bx:script>
										for( variables.method in methods ) {
											```
												<tr>
													<td>
														<strong>#encodeForHTML( variables.method.getName() )#</strong>
													</td>
													<td>
														<pre><code>#encodeForHTML( variables.method.toString() )#</code></pre>
													</td>
												</tr>
											```
										}
									</bx:script>
								</tbody>
							</table>
						</div>
					</td>
				</tr>
			</tbody>
		</table>
	</div>
</bx:output>
